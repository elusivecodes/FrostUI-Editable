!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@fr0st/ui"),require("@fr0st/query"),require("@fr0st/ui-autocomplete"),require("@fr0st/ui-colorpicker"),require("@fr0st/ui-datetimepicker"),require("@fr0st/ui-selectmenu")):"function"==typeof define&&define.amd?define(["exports","@fr0st/ui","@fr0st/query","@fr0st/ui-autocomplete","@fr0st/ui-colorpicker","@fr0st/ui-datetimepicker","@fr0st/ui-selectmenu"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).UI=t.UI||{},t.UI,t.fQuery,t.UI.Autocomplete,t.UI.ColorPicker,t.UI.DateTimePicker,t.UI.SelectMenu)}(this,(function(t,e,i,s,o,n,r){"use strict";class l extends e.BaseComponent{constructor(t,e){super(t,e),this._value=null===this._options.value?i.getText(this._node):this._options.value,this._enabled=!0,this._getLabel=t=>{if(this._options.getLabel)return this._options.getLabel(this._value,this._input,this);if(this._selectmenu){const t=this._selectmenu.data();return t?t.text:null}if("select"!==this._options.type)return this._value;if(!i._isArray(this._value)){const t=i.findOne(`option[value="${this._value}"]`,this._input);return t?i.getText(t):null}const e=[];for(const t of this._value){const s=i.findOne(`option[value="${t}"]`,this._input),o=i.getText(s);e.push(o)}return e.length?e.join(this._options.separator):null},this._buildForm(),this._buildLoader(),this._events(),this._refresh(!0)}disable(){return this._enabled=!1,this._refresh(),i.detach(this._form),i.show(this._node),this}dispose(){i.removeClass(this._node,this.constructor.classes.empty),i.removeClass(this._node,this.constructor.classes.editable),i.removeAttribute(this._node,"role"),i.removeAttribute(this._node,"title"),i.setStyle(this._node,{borderBottomStyle:""}),i.removeEvent(this._node,"click.ui.editable"),this._selectmenu?(this._selectmenu.dispose(),this._selectmenu=null):this._datetimepicker?(this._datetimepicker.dispose(),this._datetimepicker=null):this._colorpicker?(this._colorpicker.dispose(),this._colorpicker=null):this._autocomplete&&(this._autocomplete.dispose(),this._autocomplete=null),i.remove(this._form),i.show(this._node),this._form=null,this._input=null,this._inputGroup=null,this._submit=null,this._cancel=null,this._error=null,this._loader=null,this._getLabel=null,super.dispose()}enable(){return this._enabled=!0,this._refresh(),this}hide(){return i.triggerOne(this._node,"hide.ui.editable")?(this._selectmenu?this._selectmenu.hide():this._datetimepicker?this._datetimepicker.hide():this._colorpicker?this._colorpicker.hide():this._autocomplete&&this._autocomplete.hide(),i.detach(this._form),i.show(this._node),i.setHTML(this._error,""),i.hide(this._error),i.removeClass(this._form,this.constructor.classes.formError),i.triggerEvent(this._node,"hidden.ui.editable"),this):this}show(){return i.triggerOne(this._node,"show.ui.editable")?(i.before(this._node,this._form),i.hide(this._node),i.focus(this._input),i.triggerEvent(this._node,"shown.ui.editable"),this):this}toggle(){return i.isConnected(this._form)?this.hide():this.show()}}l.defaults={type:"text",value:null,emptyText:"Empty",separator:", ",inputAttributes:{},inputClass:null,inputStyle:"filled",borderStyle:"dotted",lang:{title:"Click to edit",save:"Save",cancel:"Cancel"},buttons:!0,getLabel:null,getValue:null,initInput:null,saveValue:t=>t,setValue:null,validate:t=>"",selectmenu:null,datetimepicker:null,colorpicker:null,autocomplete:null},l.classes={buttonContainer:"d-flex gap-1 mt-1",cancelButton:"btn btn-light ripple",editable:"link-primary border-bottom border-primary",empty:"link-danger fst-italic border-bottom border-danger",error:"invalid-feedback",formError:"form-error",inputContainer:"form-input",inputFilled:"input-filled",inputGroupFilled:"input-group input-group-filled",inputGroupOutline:"input-group",inputOutline:"input-outline",inputRipple:"ripple-line",saveButton:"btn btn-primary ripple",spinner:"spinner-border spinner-border-sm text-primary"};const u=l.prototype;u._buildForm=function(){if(this._form=i.create("form"),this._inputGroup=i.create("div",{class:"filled"===this._options.inputStyle?this.constructor.classes.inputGroupFilled:this.constructor.classes.inputGroupOutline}),i.append(this._form,this._inputGroup),this._renderInput(),this._options.buttons)if(this._submit=i.create("button",{html:this._options.lang.save,class:this.constructor.classes.saveButton,attributes:{type:"submit"}}),this._cancel=i.create("button",{html:this._options.lang.cancel,class:this.constructor.classes.cancelButton,attributes:{type:"button"}}),"bottom"===this._options.buttons){const t=i.create("div",{class:this.constructor.classes.buttonContainer});i.append(this._form,t),i.append(t,this._submit),i.append(t,this._cancel)}else i.append(this._inputGroup,this._submit),i.append(this._inputGroup,this._cancel);this._error=i.create("div",{class:this.constructor.classes.error}),i.append(this._form,this._error),i.hide(this._error),this._options.initInput?this._options.initInput(this._input,this):this._options.selectmenu?this._selectmenu=r.init(this._input,this._options.selectmenu):this._options.datetimepicker?this._datetimepicker=n.init(this._input,this._options.datetimepicker):this._options.colorpicker?this._colorpicker=o.init(this._input,this._options._colorpicker):this._options.autocomplete&&(this._autocomplete=s.init(this._input,this._options.autocomplete))},u._buildLoader=function(){this._loader=i.create("span",{class:this.constructor.classes.spinner})},u._events=function(){i.addEvent(this._node,"click.ui.editable",(t=>{this._enabled&&(t.preventDefault(),this._updateValue(),this.show())})),i.addEvent(this._input,"keydown.ui.editable",(t=>{"Escape"===t.code&&(t.preventDefault(),i.setValue(this._input,this._value),this.hide())})),this._options.buttons?i.addEvent(this._cancel,"click.ui.editable",(t=>{t.preventDefault(),this.hide()})):i.addEvent(this._input,"change.ui.editable",(t=>{i.triggerEvent(this._form,"submit.ui.editable")})),i.addEvent(this._form,"submit.ui.editable",(t=>{t.preventDefault();const e=this._options.getValue?this._options.getValue(this._input,this):i.getValue(this._input),s=this._options.validate(e,this._input,this);Promise.resolve(s).then((t=>{if(t||e===this._value)throw new Error(t);return i.before(this._node,this._loader),i.hide(this._form),this._options.saveValue(e,this._input,this)})).then((t=>{this._value=e,this._refresh(),i.triggerEvent(this._node,"saved.ui.editable"),this.hide()})).catch((t=>{if(!t.message)return this.hide();i.setHTML(this._error,t),i.show(this._error),i.addClass(this._form,this.constructor.classes.formError)})).finally((t=>{i.detach(this._loader),i.show(this._form)}))}))},u._refresh=function(t=!1){if(i.removeClass(this._node,this.constructor.classes.empty),i.removeClass(this._node,this.constructor.classes.editable),!this._enabled)return i.removeAttribute(this._node,"role"),i.removeAttribute(this._node,"title"),void i.setStyle(this._node,{borderBottomStyle:""});i.setAttribute(this._node,{role:"button",title:this._options.lang.title}),this._options.borderStyle&&i.setStyle(this._node,{borderBottomStyle:this._options.borderStyle},null,{important:!0}),Promise.resolve(this._getLabel()).then((e=>{if(this._enabled){if(!e&&t&&(e=i.getText(this._node)),!e)return i.setText(this._node,this._options.emptyText),void i.addClass(this._node,this.constructor.classes.empty);i.setText(this._node,e),i.addClass(this._node,this.constructor.classes.editable)}}))},u._renderInput=function(){const t=i.create("div",{class:this.constructor.classes.inputContainer});i.append(this._inputGroup,t);const e={};let s;switch(this._options.type){case"select":case"textarea":s=this._options.type;break;default:s="input",e.type=this._options.type}if(this._input=i.create(s,{class:"filled"===this._options.inputStyle?this.constructor.classes.inputFilled:this.constructor.classes.inputOutline,attributes:{...e,...this._options.inputAttributes}}),this._options.inputClass&&i.addClass(this._input,this._options.inputClass),i.append(t,this._input),"select"===this._options.type&&this._options.data)for(const t of this._options.data){const e=i.create("option",{text:t.text,attributes:{value:t.value}});i.append(this._input,e)}if("filled"===this._options.inputStyle){const e=i.create("div",{class:this.constructor.classes.inputRipple});i.append(t,e)}},u._updateValue=function(){this._options.setValue?this._options.setValue(this._input,this._value,this):this._selectmenu?this._selectmenu.setValue(this._value):this._datetimepicker?this._datetimepicker.setDate(this._value):this._colorpicker?this._colorpicker.setColor(this._value):i.setValue(this._input,this._value)},e.initComponent("editable",l),t.Editable=l}));